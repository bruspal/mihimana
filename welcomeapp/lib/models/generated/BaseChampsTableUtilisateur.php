<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ChampsTableUtilisateur', 'data');

/**
 * BaseChampsTableUtilisateur
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $nom_table
 * @property string $nom_champ
 * @property string $type_champ
 * @property string $option_type_champ
 * @property boolean $est_autoincrement
 * @property boolean $est_primary
 * @property boolean $est_notnull
 * @property boolean $est_index
 * @property boolean $est_recherche
 * @property boolean $est_lecture_seule
 * @property clob $val_def
 * @property clob $val_min
 * @property clob $val_max
 * @property string $type_widget
 * @property string $option_type_widget
 * @property clob $formule_calcul
 * @property boolean $calcul_systematique
 * @property string $css_attr
 * @property string $css_class
 * @property array $javascript
 * @property string $libelle
 * @property string $info_bulle
 * @property clob $message_aide
 * @property boolean $evenementiel
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseChampsTableUtilisateur extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('champs_table_utilisateur');
        $this->hasColumn('nom_table', 'string', 20, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '20',
             ));
        $this->hasColumn('nom_champ', 'string', 40, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '40',
             ));
        $this->hasColumn('type_champ', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'string',
             ));
        $this->hasColumn('option_type_champ', 'string', 20, array(
             'type' => 'string',
             'length' => '20',
             ));
        $this->hasColumn('est_autoincrement', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('est_primary', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('est_notnull', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('est_index', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('est_recherche', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('est_lecture_seule', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('val_def', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('val_min', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('val_max', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('type_widget', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('option_type_widget', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('formule_calcul', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('calcul_systematique', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('css_attr', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('css_class', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('javascript', 'array', 32768, array(
             'type' => 'array',
             'length' => '32768',
             ));
        $this->hasColumn('libelle', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('info_bulle', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('message_aide', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('evenementiel', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}