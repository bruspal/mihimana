<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ChampsEcranUtilisateur', 'data');

/**
 * BaseChampsEcranUtilisateur
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $nom_ecran
 * @property string $nom_champ
 * @property string $type_champ
 * @property boolean $est_lecture_seule
 * @property boolean $est_notnull
 * @property clob $val_def
 * @property clob $val_min
 * @property clob $val_max
 * @property string $type_widget
 * @property clob $option_type_widget
 * @property clob $formule_calcul
 * @property boolean $calcul_systematique
 * @property string $css_attr
 * @property string $css_class
 * @property string $libelle
 * @property clob $info_bulle
 * @property clob $message_aide
 * @property boolean $evenementiel
 * @property string $contextuel
 * @property integer $numero_ordre
 * @property string $raccourcis
 * @property clob $jsclick
 * @property clob $jsfocus
 * @property clob $jsblur
 * @property clob $jschange
 * @property clob $jsdblclick
 * @property clob $jsrclick
 * @property EcranUtilisateur $EcranUtilisateur
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseChampsEcranUtilisateur extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('champs_ecran_utilisateur');
        $this->hasColumn('nom_ecran', 'string', 20, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '20',
             ));
        $this->hasColumn('nom_champ', 'string', 40, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '40',
             ));
        $this->hasColumn('type_champ', 'string', 3, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '3',
             ));
        $this->hasColumn('est_lecture_seule', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('est_notnull', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('val_def', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('val_min', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('val_max', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('type_widget', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('option_type_widget', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('formule_calcul', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('calcul_systematique', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('css_attr', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('css_class', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('libelle', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('info_bulle', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('message_aide', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('evenementiel', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('contextuel', 'string', 60, array(
             'type' => 'string',
             'length' => '60',
             ));
        $this->hasColumn('numero_ordre', 'integer', 5, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => '5',
             ));
        $this->hasColumn('raccourcis', 'string', 30, array(
             'type' => 'string',
             'length' => '30',
             ));
        $this->hasColumn('jsclick', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('jsfocus', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('jsblur', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('jschange', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('jsdblclick', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('jsrclick', 'clob', null, array(
             'type' => 'clob',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('EcranUtilisateur', array(
             'local' => 'nom_ecran',
             'foreign' => 'nom_ecran'));
    }
}