<?php

/* ------------------------------------------------------------------------------
  -------------------------------------
  Mihimana : the visual PHP framework.
  Copyright (C) 2012-2014  Bruno Maffre
  contact@bmp-studio.com
  -------------------------------------

  -------------------------------------
  @package : lib
  @module: mmForm/widgets
  @file : mmWidgetButtonNext.php
  -------------------------------------

  This file is part of Mihimana.

  Mihimana is free software: you can redistribute it and/or modify
  it under the terms of the GNU Lesser General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  Mihimana is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public License
  along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
  ------------------------------------------------------------------------------ */

class mmWidgetButtonNext extends mmWidgetButtonGoPage {

    protected
            $cle,
            $actionClick;

    public function __construct($libelle, $cle, $actionClick = '', $name = '', $attributs = array()) {
        $this->cle = $cle;
        $this->actionClick = $actionClick;
        parent::__construct($libelle, '', false, $name, $attributs);
    }

    public function postAddWidget() {

        //on cherche le champ, avant on recupere les info du container
        if ($this->containerForm != null) {
            $enreg = $this->containerForm->getRecord();
            $table = $this->containerForm->ecran['table_liee'];
            //on recupÃ¨re la clÃ© suivante, ou la premiere
            if ($enreg->exists()) {
                $rq = Doctrine_Core::getTable($table)->createQuery()->
                        select($this->cle)->
                        where($this->cle . ' > ?', $enreg[$this->cle])->
                        orderBy($this->cle)->
                        fetchOne();
            } else {
                $rq = Doctrine_Core::getTable($table)->createQuery()->
                        select($this->cle)->
                        orderBy($this->cle)->
                        fetchOne();
            }
            if ($rq) {
                $nvCle = $rq[$this->cle];
                //On construit le parametre
                if ($this->actionClick !== '') {
                    $parametres = sprintf('?module=%s&action=%s&' . $this->actionClick, MODULE_COURANT, ACTION_COURANTE, $this->cle . '=' . $nvCle);
                } else {
                    $parametres = sprintf('?module=%s&action=%s&b=%s', MODULE_COURANT, ACTION_COURANTE, $this->cle . '=' . $nvCle);
                }
            } else {
                $this->disable(false);
                $parametres = sprintf('?module=%s&action=%s', MODULE_COURANT, ACTION_COURANTE);
            }
        } else {
            $parametres = sprintf('?module=%s&action=%s', MODULE_COURANT, ACTION_COURANTE);
        }

        //on met a jour le bouton
        $this->setUrl($parametres);
    }

}
